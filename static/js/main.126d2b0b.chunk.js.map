{"version":3,"sources":["components/Search.js","components/Forecast.js","components/App.js","index.js"],"names":["Search","state","term","lat","lon","onFormSubmit","event","preventDefault","props","runMySubmit","mySearchSubmit","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","onMySearch","err","alert","this","runMyLocation","className","onClick","onSubmit","placeholder","type","value","onChange","target","href","React","Component","icons","Forecast","weather","parent","overview","forecast","consolidated_weather","mydates","forEach","arr","day","Date","applicable_date","toUTCString","slice","push","mybackground","math","temp","Math","round","weather_state_name","title","timezone","timezone_name","src","weather_state_abbr","alt","max_temp","min_temp","App","forecasting","onSearchSubmit","a","fetch","result","json","location_rep","cur_woeid","woeid","woeid_rep","data","onLocation","style","marginTop","marginBottom","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.126d2b0b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = {term: '', lat: null, lon: null}\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.runMySubmit(this.state.term);\r\n  }\r\n\r\n  onMySearch() {\r\n    this.props.runMyLocation(this.state.lat, this.state.lon);\r\n  }\r\n\r\n  mySearchSubmit = event => {\r\n    event.preventDefault();\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        });\r\n        this.onMySearch();\r\n      },\r\n      err => alert('Please turn on location & try again!')\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <div className=\"wrapper\">\r\n          <h1>Weather Forecast</h1>\r\n          <button className=\"ui button\" onClick={this.mySearchSubmit}>\r\n            <i className=\"crosshairs icon\"></i>My Location\r\n          </button>\r\n        </div>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Search by Major City</label>\r\n            <input placeholder=\"Los Angeles, New York, Paris, London, Cairo, Tokyo, etc.\" type=\"text\" value={this.state.term} onChange={ event => this.setState({term: event.target.value})} ></input>\r\n            <p className=\"copyright\">&copy; Designed by <a className=\"link\" href=\"https://drakenguyen4000.github.io/portfolio/\">Drake\r\n            Nguyen 2020</a>. Powered by <a className=\"link\" href=\"https://www.metaweather.com/\"> MetaWeather </a> API.</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst icons = `https://www.metaweather.com/static/img/weather/png/`;\r\n\r\nconst Forecast = props => {\r\n  if (!props.weather || !props.weather.parent) {\r\n    return <h2>Please enter a major city...</h2>;\r\n  }\r\n\r\n  const overview = props.weather;\r\n  const forecast = props.weather.consolidated_weather;\r\n\r\n  //Determining day\r\n  const mydates = [];\r\n\r\n  forecast.forEach(function(arr){\r\n    const date = new Date(arr.applicable_date);\r\n    const utc = date.toUTCString();\r\n    const day = utc.slice(0,3);\r\n    mydates.push(day);\r\n  })\r\n\r\n  //weather background control\r\n  const mybackground = [];\r\n\r\n  forecast.forEach(function(arr){\r\n    const weather = arr.weather_state_name;\r\n    switch(weather) {\r\n      case \"Snow\":\r\n        mybackground.push(\"snow\");\r\n        break;\r\n      case \"Sleet\":\r\n        mybackground.push(\"snow\");\r\n        break;\r\n      case \"Hail\":\r\n        mybackground.push(\"snow\");\r\n        break;\r\n      case \"Thunderstorm\":\r\n        mybackground.push(\"thunderstorm\");\r\n        break;\r\n      case \"Heavy Rain\":\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      case \"Light Rain\":\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      case \"Showers\":\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      case \"Heavy Cloud\":\r\n        mybackground.push(\"cloud\");\r\n        break;\r\n      case \"Light Cloud\":\r\n        mybackground.push(\"cloud\");\r\n        break;\r\n      case \"Clear\":\r\n        mybackground.push(\"sunny\");\r\n        break;\r\n      default: mybackground.push(\"sunny\");\r\n    }\r\n  })\r\n\r\n  //Degree\r\n  function math (temp) {\r\n    //Fahrenheit\r\n    return Math.round(temp * 9 / 5 + 32);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"ui segment city_info\">\r\n        <h1 className=\"city_name\">{overview.title}</h1>\r\n        <div className=\"detail_info\">\r\n          <p>State/Country: {overview.parent.title}</p>\r\n          <p>Timezone: {overview.timezone}</p>\r\n          <p>TZName: {overview.timezone_name}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"fiveday\">\r\n        <div className={`ui card ${mybackground[0]}`}>\r\n          <h1 className=\"day\">{mydates[0]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[0].weather_state_abbr}.png`} alt=\"weather_img\"></img>\r\n          </div>\r\n          <h2>{forecast[0].weather_state_name}</h2>\r\n          <h1>H: {math(forecast[0].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[0].min_temp)}<sup>o</sup>F</h1>\r\n        </div>\r\n        <div className={`ui card ${mybackground[1]}`}>\r\n          <h1 className=\"day\">{mydates[1]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[1].weather_state_abbr}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[1].weather_state_name}</h2>\r\n          <h1>H: {math(forecast[1].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[1].min_temp)}<sup>o</sup>F</h1>\r\n        </div>\r\n        <div className={`ui card ${mybackground[2]}`}>\r\n          <h1 className=\"day\">{mydates[2]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[2].weather_state_abbr}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[2].weather_state_name}</h2>\r\n          <h1>H: {math(forecast[2].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[2].min_temp)}<sup>o</sup>F</h1>\r\n        </div>\r\n        <div className={`ui card ${mybackground[3]}`}>\r\n          <h1 className=\"day\">{mydates[3]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[3].weather_state_abbr}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[3].weather_state_name}</h2>\r\n          <h1>H: {math(forecast[3].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[3].min_temp)}<sup>o</sup>F</h1>\r\n        </div>\r\n        <div className={`ui card ${mybackground[4]}`}>\r\n          <h1 className=\"day\">{mydates[4]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[4].weather_state_abbr}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[4].weather_state_name}</h2>\r\n          <h1>H: {math(forecast[4].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[4].min_temp)}<sup>o</sup>F</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import \"./App.css\"\r\nimport React from 'react';\r\nimport Search from './Search';\r\nimport Forecast from './Forecast';\r\n\r\nclass App extends React.Component {\r\n    state = { forecasting: {} };\r\n    \r\n    onSearchSubmit = async (term) => {\r\n            try {\r\n                const result = await fetch (`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${term}`);\r\n                const location_rep = await result.json();\r\n                const cur_woeid = location_rep[0].woeid;\r\n                const woeid_rep = await fetch (`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${cur_woeid}/`);\r\n                const data = await woeid_rep.json();\r\n                this.setState({ forecasting: data});\r\n            } catch(error) {\r\n                alert('Not found. Please enter another city.');\r\n            }\r\n    }\r\n\r\n    onLocation = async (lat, lon) => {\r\n        try {\r\n            // console.log(lat, lon);\r\n            const result = await fetch (`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?lattlong=${lat},${lon}`);\r\n            const location_rep = await result.json();\r\n            const cur_woeid = location_rep[0].woeid;\r\n            const woeid_rep = await fetch (`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${cur_woeid}/`);\r\n            const data = await woeid_rep.json();\r\n            this.setState({ forecasting: data});\r\n        } catch(error) {\r\n            alert('Not found. Please search by field.');\r\n        }\r\n}\r\n    \r\n    render() {\r\n    return <div className=\"ui container\" style={{marginTop: '10px', marginBottom: '100px'}}>\r\n        <Search runMySubmit={this.onSearchSubmit} runMyLocation={this.onLocation} />\r\n        <Forecast weather={this.state.forecasting}/>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default App;","//Index.js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}