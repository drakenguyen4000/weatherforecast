{"version":3,"sources":["components/Search.js","components/Forecast.js","components/App.js","index.js"],"names":["Search","state","term","lat","lon","onFormSubmit","event","preventDefault","props","runMySubmit","onMySearch","runMyLocation","mySearchSubmit","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","alert","className","onClick","this","onSubmit","id","placeholder","type","value","onChange","target","href","React","Component","icons","Forecast","weather","data","overview","forecast","console","log","mydays","mydates","forEach","arr","utc","Date","datetime","toUTCString","day","slice","dates","push","mybackground","math","temp","Math","round","x","code","city_name","country_code","timezone","src","icon","alt","description","max_temp","min_temp","App","forecasting","onSearchSubmit","a","fetch","result","json","onLocation","mylocation","style","marginTop","marginBottom","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.98545064.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = {term: '', lat: null, lon: null}\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.runMySubmit(this.state.term);\r\n  }\r\n\r\n  onMySearch = () => {\r\n    this.props.runMyLocation(this.state.lat, this.state.lon);\r\n  }\r\n\r\n  mySearchSubmit = event => {\r\n    event.preventDefault();\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        });\r\n        this.onMySearch();\r\n      },\r\n      err => alert('Please turn on location & try again!')\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"appName\">Weather Forecast</h1>\r\n          <button className=\"ui button\" onClick={this.mySearchSubmit}>\r\n            <i className=\"crosshairs icon\"></i>My Location\r\n          </button>\r\n        </div>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Search by Major City</label>\r\n            <div className=\"wrapper\">\r\n                <input id=\"searchfield\" placeholder=\"Los Angeles, New York, Paris, London, Cairo, Tokyo, etc.\" type=\"text\" value={this.state.term} onChange={ event => this.setState({term: event.target.value})} ></input><div className=\"ui submit button\" onClick={this.onFormSubmit}>Search</div>\r\n            </div>\r\n            <p className=\"copyright\">&copy; Designed by <a className=\"link\" href=\"https://drakenguyen4000.github.io/portfolio/\">Drake\r\n            Nguyen 2020</a></p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst icons = `https://www.weatherbit.io/static/img/icons/`;\r\n\r\nconst Forecast = props => {\r\n  if (!props.weather || !props.weather.data) {\r\n    return <h2>Data only covers major cities. My Location feature will find the closes city with data.</h2>;\r\n  }\r\n\r\n  const overview = props.weather;\r\n  const forecast = props.weather.data;\r\n  console.log(forecast);\r\n\r\n  //Determining day\r\n  const mydays = [];\r\n  const mydates = [];\r\n\r\n  forecast.forEach(function(arr){\r\n    const current_date = new Date(arr.datetime);\r\n    const utc = current_date.toUTCString();\r\n    const day = utc.slice(0,3);\r\n    const dates = utc.slice(4,11);\r\n    mydays.push(day);\r\n    mydates.push(dates);\r\n  })\r\n\r\n  //weather background control\r\n  const mybackground = [];\r\n\r\n  forecast.forEach(function(arr){\r\n    const x = arr.weather.code;\r\n    switch(true) {\r\n      case (x < 300):\r\n        mybackground.push(\"thunderstorm\");\r\n        break;\r\n      case (x < 600):\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      case (x < 700):\r\n        mybackground.push(\"snow\");\r\n        break;\r\n      case (x < 800):\r\n        mybackground.push(\"fog\");\r\n        break;\r\n      case (x === 800):\r\n        mybackground.push(\"sunny\");\r\n        break;  \r\n      case (x < 900):\r\n        mybackground.push(\"cloud\");\r\n        break;\r\n      case (x === 900):\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      default: mybackground.push(\"sunny\");\r\n    }\r\n  })\r\n\r\n  //Degree\r\n  function math (temp) {\r\n    //Fahrenheit\r\n    return Math.round(temp * 9 / 5 + 32);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"ui segment city_info\">\r\n        <h1 className=\"city_name\">{overview.city_name}</h1>\r\n        <div className=\"detail_info\">\r\n          <p>Country: <br/>{overview.country_code}</p>\r\n          <p>Timezone: <br/>{overview.timezone}</p>\r\n          <p>Latitude: <br/>{overview.lat}</p>\r\n          <p>Longitude: <br/>{overview.lon}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"fiveday\">\r\n        <div className={`ui card ${mybackground[0]}`}>\r\n          <h1 className=\"day\">{mydays[0]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[0].weather.icon}.png`} alt=\"weather_img\"></img>\r\n          </div>\r\n          <h2>{forecast[0].weather.description}</h2>\r\n          <h1>H: {math(forecast[0].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[0].min_temp)}<sup>o</sup>F</h1>\r\n          <h2>{mydates[0]}</h2>\r\n        </div>\r\n        <div className={`ui card ${mybackground[1]}`}>\r\n          <h1 className=\"day\">{mydays[1]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[1].weather.icon}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[1].weather.description}</h2>\r\n          <h1>H: {math(forecast[1].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[1].min_temp)}<sup>o</sup>F</h1>\r\n          <h2>{mydates[1]}</h2>\r\n        </div>\r\n        <div className={`ui card ${mybackground[2]}`}>\r\n          <h1 className=\"day\">{mydays[2]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[2].weather.icon}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[2].weather.description}</h2>\r\n          <h1>H: {math(forecast[2].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[2].min_temp)}<sup>o</sup>F</h1>\r\n          <h2>{mydates[2]}</h2>\r\n        </div>\r\n        <div className={`ui card ${mybackground[3]}`}>\r\n          <h1 className=\"day\">{mydays[3]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[3].weather.icon}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[3].weather.description}</h2>\r\n          <h1>H: {math(forecast[3].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[3].min_temp)}<sup>o</sup>F</h1>\r\n          <h2>{mydates[3]}</h2>\r\n        </div>\r\n        <div className={`ui card ${mybackground[4]}`}>\r\n          <h1 className=\"day\">{mydays[4]}</h1>\r\n          <div>\r\n            <img className=\"weather_icon\" src={`${icons}${forecast[4].weather.icon}.png`} alt=\"weather_img\"></img>\r\n          </div>  \r\n          <h2>{forecast[4].weather.description}</h2>\r\n          <h1>H: {math(forecast[4].max_temp)}<sup>o</sup>F</h1>\r\n          <h1>L: {math(forecast[4].min_temp)}<sup>o</sup>F</h1>\r\n          <h2>{mydates[4]}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import \"./App.css\"\r\nimport React from 'react';\r\nimport Search from './Search';\r\nimport Forecast from './Forecast';\r\n\r\nclass App extends React.Component {\r\n    state = { forecasting: {} };\r\n    \r\n    onSearchSubmit = async (term) => {\r\n            try {\r\n                let result = await fetch (`https://api.weatherbit.io/v2.0/forecast/daily?city=${term}&key=e144fc77ceb24c3780e746036b7405ff`);\r\n                let data = await result.json();\r\n                this.setState({ forecasting: data});\r\n            } catch(error) {\r\n                alert('Not found. Please enter another city.');\r\n            }\r\n    }\r\n\r\n    onLocation = async (lat, lon) => {\r\n        try {\r\n            let mylocation = await fetch (`https://api.weatherbit.io/v2.0/forecast/daily?&lat=${lat}&lon=${lon}&key=e144fc77ceb24c3780e746036b7405ff`);\r\n                let data = await mylocation.json();\r\n                this.setState({ forecasting: data});\r\n        } catch(error) {\r\n            alert('Not found. Please search by field.');\r\n        }\r\n}\r\n    \r\n    render() {\r\n    return <div className=\"ui container\" style={{marginTop: '10px', marginBottom: '100px'}}>\r\n        <Search runMySubmit={this.onSearchSubmit} runMyLocation={this.onLocation} />\r\n        <Forecast weather={this.state.forecasting}/>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default App;","//Index.js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}