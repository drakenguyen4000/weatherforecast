{"version":3,"sources":["components/Search.js","components/Forecast.js","components/App.js","index.js"],"names":["Search","state","term","lat","lon","onFormSubmit","event","preventDefault","props","runMySubmit","onMySearch","runMyLocation","mySearchSubmit","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","alert","className","onClick","this","onSubmit","id","placeholder","type","value","onChange","target","href","React","Component","DailyForecast","forecastMaxTemp","forecastMinTemp","description","icon","mybackground","myday","mydate","degree","temp","Math","round","src","alt","Forecast","weather","data","overview","forecast","mydays","mydates","forEach","arr","utc","Date","datetime","toUTCString","day","slice","dates","push","x","code","city_name","country_code","timezone","Array","map","i","max_temp","min_temp","api_key","process","App","forecasting","onSearchSubmit","a","fetch","result","json","onLocation","mylocation","style","marginTop","marginBottom","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c77a5e44.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = {term: '', lat: null, lon: null}\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.runMySubmit(this.state.term);\r\n  }\r\n\r\n  onMySearch = () => {\r\n    this.props.runMyLocation(this.state.lat, this.state.lon);\r\n  }\r\n\r\n  mySearchSubmit = event => {\r\n    event.preventDefault();\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lon: position.coords.longitude\r\n        });\r\n        this.onMySearch();\r\n      },\r\n      err => alert('Please turn on location & try again!')\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"appName\">Weather Forecast</h1>\r\n          <button className=\"ui button\" onClick={this.mySearchSubmit}>\r\n            <i className=\"crosshairs icon\"></i>My Location\r\n          </button>\r\n        </div>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Search by City</label>\r\n            <div className=\"wrapper\">\r\n                <input id=\"searchfield\" placeholder=\"Los Angeles, New York, Paris, London, Cairo, Tokyo, etc.\" type=\"text\" value={this.state.term} onChange={ event => this.setState({term: event.target.value})} ></input><div className=\"ui submit button\" onClick={this.onFormSubmit}>Search</div>\r\n            </div>\r\n            <p className=\"copyright\">&copy; Designed by <a className=\"link\" href=\"https://drakenguyen4000.github.io/portfolio/\">Drake\r\n            Nguyen 2020</a></p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst icons = `https://www.weatherbit.io/static/img/icons/`;\r\n\r\nconst Forecast = (props) => {\r\n  if (!props.weather || !props.weather.data) {\r\n    return <h2>What's your five day forecast like for the week?</h2>;\r\n  }\r\n\r\n  const overview = props.weather;\r\n  const forecast = props.weather.data;\r\n\r\n  //Determining day\r\n  const mydays = [];\r\n  const mydates = [];\r\n\r\n  forecast.forEach(function (arr) {\r\n    const current_date = new Date(arr.datetime);\r\n    const utc = current_date.toUTCString();\r\n    const day = utc.slice(0, 3);\r\n    const dates = utc.slice(4, 11);\r\n    mydays.push(day);\r\n    mydates.push(dates);\r\n  });\r\n\r\n  //weather background control\r\n  const mybackground = [];\r\n\r\n  forecast.forEach(function (arr) {\r\n    const x = arr.weather.code;\r\n    switch (true) {\r\n      case x < 300:\r\n        mybackground.push(\"thunderstorm\");\r\n        break;\r\n      case x < 600:\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      case x < 700:\r\n        mybackground.push(\"snow\");\r\n        break;\r\n      case x < 800:\r\n        mybackground.push(\"fog\");\r\n        break;\r\n      case x === 800:\r\n        mybackground.push(\"sunny\");\r\n        break;\r\n      case x < 900:\r\n        mybackground.push(\"cloud\");\r\n        break;\r\n      case x === 900:\r\n        mybackground.push(\"rain\");\r\n        break;\r\n      default:\r\n        mybackground.push(\"sunny\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui segment city_info\">\r\n        <h1 className=\"city_name\">{overview.city_name}</h1>\r\n        <div className=\"detail_info\">\r\n          <p>\r\n            Country: <br />\r\n            {overview.country_code}\r\n          </p>\r\n          <p>\r\n            Timezone: <br />\r\n            {overview.timezone}\r\n          </p>\r\n          <p>\r\n            Latitude: <br />\r\n            {overview.lat}\r\n          </p>\r\n          <p>\r\n            Longitude: <br />\r\n            {overview.lon}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"fiveday\">\r\n        {[...Array(5)].map((x, i) => (\r\n          <DailyForecast\r\n            forecastMaxTemp={forecast[i].max_temp}\r\n            forecastMinTemp={forecast[i].min_temp}\r\n            description={forecast[i].weather.description}\r\n            icon={forecast[i].weather.icon}\r\n            mybackground={mybackground[i]}\r\n            myday={mydays[i]}\r\n            mydate={mydates[i]}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DailyForecast = ({\r\n  forecastMaxTemp,\r\n  forecastMinTemp,\r\n  description,\r\n  icon,\r\n  mybackground,\r\n  myday,\r\n  mydate,\r\n}) => {\r\n  //Degree\r\n  function degree(temp) {\r\n    //Fahrenheit\r\n    return Math.round((temp * 9) / 5 + 32);\r\n  }\r\n\r\n  return (\r\n    <div className={`ui card ${mybackground}`}>\r\n      <h1 className=\"day\">{myday}</h1>\r\n      <div>\r\n        <img\r\n          className=\"weather_icon\"\r\n          src={`${icons}${icon}.png`}\r\n          alt=\"weather_img\"\r\n        ></img>\r\n      </div>\r\n      <h2>{description}</h2>\r\n      <h1>\r\n        H: {degree(forecastMaxTemp)}\r\n        <sup>o</sup>F\r\n      </h1>\r\n      <h1>\r\n        L: {degree(forecastMinTemp)}\r\n        <sup>o</sup>F\r\n      </h1>\r\n      <h2>{mydate}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import \"./App.css\"\r\nimport React from 'react';\r\nimport Search from './Search';\r\nimport Forecast from './Forecast';\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nclass App extends React.Component {\r\n    state = { forecasting: {} };\r\n    \r\n    onSearchSubmit = async (term) => {\r\n            try {\r\n                let result = await fetch (`https://api.weatherbit.io/v2.0/forecast/daily?city=${term}&key=${api_key}`);\r\n                let data = await result.json();\r\n                this.setState({ forecasting: data});\r\n            } catch(error) {\r\n                alert('Not found. Please enter another city.');\r\n            }\r\n    }\r\n\r\n    onLocation = async (lat, lon) => {\r\n        try {\r\n            let mylocation = await fetch (`https://api.weatherbit.io/v2.0/forecast/daily?&lat=${lat}&lon=${lon}&key=${api_key}`);\r\n                let data = await mylocation.json();\r\n                this.setState({ forecasting: data});\r\n        } catch(error) {\r\n            alert('Not found. Please search by field.');\r\n        }\r\n}\r\n    \r\n    render() {\r\n    return <div className=\"ui container\" style={{marginTop: '10px', marginBottom: '100px'}}>\r\n        <Search runMySubmit={this.onSearchSubmit} runMyLocation={this.onLocation} />\r\n        <Forecast weather={this.state.forecasting}/>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default App;","//Index.js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}